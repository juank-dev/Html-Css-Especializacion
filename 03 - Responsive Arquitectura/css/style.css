[class^="box"] {
    margin: 3rem auto;
    background-color: rgb(216, 83, 71);
}

.box {
    width: 300px;
    height: 300px;
}

.box-flexible {
    width: 50%;
    height: 20vh;
}
.box-flexible-2 {
    max-width: 960px;
    min-width: 280px;
    max-height: 480px;
    min-height: 300px;
}

.box-flexible-3 {
    max-width: 960px;
    min-width: 280px;
    max-height: 480px;
    min-height: 300px;
    /* Error al hacer esto, width y height tienen mayor jerarquia
        y son unidades absolutas
    */
    width: 300px;
    height: 300px;
}

.box-flexible-4 {
    max-width: 960px;
    min-width: 280px;
    max-height: 480px;
    min-height: 300px;
     /* como estas unidades de medida son dinamicas si funciona estas propiedades */
    width: 50%;
    height: 20vh;
}


img, video, iframe {
    max-width: 100%;
    height: auto;
}

.responsive-media {
    position: relative;
    max-width: 100%;
    height: 0;
    /* 
        Formato widescreen 16:9
        16 ---> 100%
        9 ---> 56.25%
    */
    padding-bottom: 56.25%;
}

.responsive-media > * {
    position: absolute;
    width: 100%;
    height: 100%;
}
/* Nueva tecnica */
.aspect-ratio-16-9 {
    aspect-ratio: 16 / 9;
    background-color: darkorchid;
}

.aspect-ratio-1-1 {
    aspect-ratio: 1 / 1;
}

/* media query */

/* Para impresion */
@media print {
    @page {
        size: A5 landscape;
    }

    body {
        font-size: 12pt;
        font-family:sans-serif;
        background-color: rgb(187, 103, 77);
        color: rgb(88, 206, 72);
    }
}

/* reducccion de movimiento */

@media screen and (prefers-reduced-motion:reduce) {
    /* prefers-reduced-motion:no-preference viene por defecto */
    html {
        scroll-behavior: auto;
    }
}

/* colores de acuerdo al tema del sistema operativo no del navegador*/

@media screen and (prefers-color-scheme: dark) {
    html {
        background-color: #000;
        color:rgb(88, 206, 72)
    }
}

@media screen and (prefers-color-scheme: light) {
    html {
        background-color: #fff;
        color:rgb(9, 66, 2)
    }
}

/* en Mobile First se usa min width que significa lo minimo del valor que des hacia arriba*/
@media screen and (min-width: 480px) {
    html {
        background-color: rgb(250, 230, 249);
    }
}

/* En Desktop First se usa max width lo maximo del valor que des hacia abajo*/
@media screen and (max-width: 1024px) {
    html {
        background-color: rgb(250, 249, 230);
    }
}

/* Las Feature Queries son reglas CSS que le preguntan al navegador si soportan o no, una determinada propiedad o valor. */
@supports (grid-template-columns: subgrid) {
    html {
        background-color: rgb(174, 209, 230);
        color:royalblue;
    }
}

@supports not(grid-template-columns: subgrid) {
    html {
        background-color: rgb(222, 230, 174);
        color:rgb(166, 65, 225);
    }
}

@supports (display: grid) and (grid-template-columns: subgrid) {
    html {
        background-color: #fff222;
        color:rgb(9, 66, 2);
    }
}

@supports (display: grid) or (grid-template-columns: subgrid) {
    html {
        background-color: #ffffff;
        color:rgb(0, 0, 0);
    }
}

/* 
    Container Queries
Los Container Queries nos permiten hacer componentes responsivos de interfaz de usuario, que no dependan del tamaño de la pantalla y las media queries para cambiar o adaptar el diseño de su contenido. Sino que dependan de sus propias necesidades de visualización.
*/

.card {
    border: thin solid black;
    margin-left: auto;
    margin-right: auto;
    max-width: 800px;
    contain: layout inline-size style;
}

.card-image {
    min-width: 100%;
    height: auto;
    object-fit: cover;
    object-position: 0 50%;
}

.card-content {
    padding: 1rem;
}

/*  experimental => chrome://flags/ */
@container (min-width: 600px) {
    .card-container {
        display: flex;
    }

    .card-container > * {
        width: 50%;
        flex-basis: 50%;
    }
}


.fluid-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}

.fliud-item {
    border: thin solid black;
    padding: 1rem;
}

/* @link https://utopia.fyi/type/calculator?c=320,21,1.2,1140,24,1.25,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l */

:root {
    --step--2: clamp(0.91rem, 0.89rem + 0.10vw, 0.96rem);
    --step--1: clamp(1.09rem, 1.05rem + 0.21vw, 1.20rem);
    --step-0: clamp(1.31rem, 1.24rem + 0.37vw, 1.50rem);
    --step-1: clamp(1.58rem, 1.46rem + 0.59vw, 1.88rem);
    --step-2: clamp(1.89rem, 1.71rem + 0.89vw, 2.34rem);
    --step-3: clamp(2.27rem, 2.01rem + 1.29vw, 2.93rem);
    --step-4: clamp(2.72rem, 2.36rem + 1.83vw, 3.66rem);
    --step-5: clamp(3.27rem, 2.75rem + 2.56vw, 4.58rem);
  }
/* no solo aplica para el font size tambien para espaciados, entre otros */
  .step--2 {
      font-size: var(--step--2);
  }

  .step--1 {
      font-size: var(--step--1);
  }

  .step-0 {
      font-size: var(--step-0);
  }

  .step-1 {
      font-size: var(--step-1);
  }

  .step-2 {
      font-size: var(--step-2);
  }

  .step-3 {
      font-size: var(--step-3);
  }
  
  .step-4 {
      font-size: var(--step-4);
  }
  .step-5 {
      font-size: var(--step-5);
  }
/* 
  14 = TAMAÑO DE LETRA MAS PEQUEÑO
  18 = TAMAÑO DE LETRA MAS GRANDE
  300 = tama de viewport mas pequeño
  1400 = tama de viewport mas grande
  */
  body {
      font-size: calc(14px + (18 - 14) * (100vw - 300px) / (1400 - 300));
  }
/* Contenedores Fluidos */
  .box-fluid {
      width: clamp(400px, 60vw, 600px);
      height: clamp(200px, 30vh, 300px)
  }