html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    overflow-x: hidden;
}

*, *::after, *::before {
    box-sizing: inherit;
}
.box {
    width: 200px;
    height: 200px;
    border: medium solid rgb(27, 8, 201);
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 4rem;     
}

.card {
    width: 600px;
    height: 400px;
    border: medium solid black;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 4rem;     
}

.card img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 0 50%;
}

/* TRANSITION */

/* 
    transition-property
    transition-duration
    transition-timing-function_ linear ease ease-in-ease ease-out ease-in-out steps
    transition-delay
    transition: property duration timing-finction delay
*/

.transitions .box  {
    background-color: aquamarine;
    transition-property: background-color;
    transition-duration: 500ms;
    transition-timing-function: ease;
    transition-delay: .5s;
    transition: border-color 2s linear 1s;
    transition: all 1s ease-in-out 0.5s;
    /* es mejor no utilizar all si no tienes control de todas las propiedades es mejor 1 por 1 */

}

.transitions .box:hover {
    background-color: cornflowerblue;
    border-color: red;
    border-radius: 2rem;
    border-width: 10px;
    /* no todas las propiedades son animables ver Mozzila MDN */
}


/* 
    timing function
*/

.transitions .card {
    transition: opacity 1s ease-in-out,
    border-color 3s steps(3),
    filter 2s ease-in,
    box-shadow 1.5s linear;
}

.transitions .card:hover {
    opacity: .75;
    border-color: blueviolet;
    filter: blur(.07rem);
    box-shadow: 1rem 1rem 2rem .5rem black;
}

.transitions .card img {
    transition: object-position 2s ease-in-out 3s;
}

.transitions .card img:hover {
    object-position: 100% 50%;
}

/* TRANSFORMACIONES */

/* 2D */

.transform-2d img {
    transition: transform 2s ease-in-out;
}

.transform-2d img:hover {
    transform: none;
    transform: translateX(4rem);
    transform: translateY(4rem);
    transform: translateZ(4rem);
    transform: translate(4rem, -4rem);
    transform: translate(20%, 20%);
    transform: scaleX(1.2);
    transform: scaleY(1.2);
    transform: scaleY(0.7);
    transform: scale(1.2, 1.2);
    transform: scale(-1.2, -1.2);
    transform: rotateX(45deg);
    transform: rotateY(45deg);
    transform: rotateX(90deg);
    transform: rotateZ(60deg);
    transform: rotateZ(-60deg);
    transform: rotate(40deg);
    transform: skewX(40deg);
    transform: skewX(-40deg);
    transform: skewY(40deg);
    transform: skewY(-40deg);
    transform: skew(40deg, 20deg);

    /* 
        matrix(scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY())  
    */
    transform: matrix(1,2,2,1,20,10);
    transform: translate(25%, -25%) rotate(40deg) skew(10deg, 10deg) scale(0.3, 0.3);
}

.transform-3d img {
    transition: transform 2s ease-in-out;
}

.transform-3d {
    perspective: 300px;
}
.transform-3d img:hover {
    
    transform: translateZ(4rem);
    /* perspective distancia en Z entre 2 puntos(persona a objeto) */
    transform:perspective(300px) translateZ(2rem);
    transform:perspective(300px) translateZ(-2rem);
    transform:translateZ(-2rem); /* Si el elemento padre tiene una perspectiva */
    transform: translate3d(2rem, 50%, -3rem);
    transform: scaleZ(1.5rem); /* una imagen no tiene volumen */
    transform: scale3d(1.2, 0.8,2);
    transform: rotateX(40deg);
    transform: rotateY(-10deg);
    transform: rotate3d(2,1,1, 10deg);
    transform: rotate3d(2,1,0, 45deg);
    transform: matrix3d(1,0,0,0,0,1,6,0,0,0,1,0,50,100,0,1.1);
    transform: rotate3d( 2,1,1, 20deg) translate3d(2rem, 50%, -3rem) scale3d(1.2, 0.8, 2);
}

.transform-origin img {
    transition: transform 2s ease-in-out;
    /* transform origin: x, y, z */
    transform-origin: 50% 50% 0;
    transform-origin: 10% 10%;
    transform-origin: top right;
    transform-origin: bottom right;
    transform-origin: top center;
    transform-origin: -2rem -3rem;
    transform-origin: -5% -10%;
    transform-origin: 5% 10%;


}
.transform-origin img:hover {
    transform: rotate(360deg);
}


/* flip card */

.flip-card-1, .flip-card-2 {
    width: 600px;
    height: 400px;
    border: medium solid black;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 4rem;     
    position: relative;
    cursor: pointer;
    transition: transform 1s ease-in-out;
    perspective: 200px;
    transform-style: flat;
    transform-style: preserve-3d;

}

.flip-card-1 img, .flip-card-2 img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 0 50%;
}

.flip-card-1:hover {
    transform: rotateY(180deg);
}

.flip-face {
    position:absolute;
    width:100%;
    height: 100%;
    backface-visibility: hidden;
}

.flip-front {
    transform: rotateY(0deg);
}

.flip-back {
    transform: rotateY(180deg);
}

.flip-card-2 {
    transform-origin: center right;
}
.flip-card-2:hover {
    transform: translateX(-100%) rotateY(180deg);
}

/* ANIMACIONES */

@keyframes myAwesomeAnimation {
    from {
        opacity: 0;
        transform: translateX(0);
    }

    to {
        opacity: 1;
        transform: translateX(200px);
    }
}
.my-animation {
    /* animation: name duration timing-function delay iteration-count direction fill-mode play-state; */
    animation-name: myAwesomeAnimation;
    animation-duration: 3s;
    animation-timing-function:cubic-bezier(1, 0, 0, 1);
    animation-timing-function:cubic-bezier(.33, .92, .92, .36); /* https://cubic-bezier.com/  */
    animation-timing-function:ease-in-out;
    animation-delay: 1s;
    animation-iteration-count: 3;
    animation-iteration-count: infinite;
    animation-iteration-count: 1;
    animation-direction: reverse;
    animation-direction: alternate;
    animation-direction: alternate-reverse;
    animation-direction: normal;
    animation-fill-mode: none;
    /* Al final de la animacion se queda con la estilos finales */
    animation-fill-mode: forwards;
    /* Al inicio de la animacion se queda con la estilos inicial */
    animation-fill-mode: backwards;
    /* aplica forwards y backwards */
    animation-fill-mode: both;
    animation-play-state: running; /* Es mejor usar esta propiedad en Javascript */
    animation: myAwesomeAnimation 2s ease 300ms 7 alternate both;
}


@keyframes myAwesomeAnimation2 {
    0% {
        opacity: 0;
        transform: translateX(0);
    }

    50% {
        opacity: 0.5;
        transform: translateX(-100px);
    }

    75% {
        transform: translateX(-200px);
    }
    100% {
        opacity: 1;
        transform: translateX(200px);
    }
}
.my-animation-2 {
    animation: myAwesomeAnimation2 5s;
}

@keyframes multipleAnimation1 {

    0% {
        opacity: 1;
    }

    50% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

@keyframes multipleAnimation2 {

    0% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-100px);
    }
    
    100% {
        transform: translateY(100px);
    }
}
.animation-multiple {
    animation: multipleAnimation1 2s infinite, multipleAnimation2 2s infinite;
}




.motion-examples {
    margin-top: 15rem;
    text-align: center;
}
@keyframes fadeIn {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

.fade-in {
    font-size: 5vw;
    animation: fadeIn 2s linear 2s infinite alternate both;
}
@keyframes fadeOut {
    0% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

.fade-out {
    font-size: 5vw;
    animation: fadeOut 2s linear 2s infinite alternate both;
}


@keyframes shake {
    10%, 90% {
        transform: translate(-1px, 0);
    }
    20%, 80% {
        transform: translate(2px, 0);
    }
    30%, 50%, 70% {
        
        transform: translate(-4px, 0);
    }
    40%, 60% {
        
        transform: translate(4px, 0);
    }

}

.shake {
    font-size: 5vw;
    cursor: pointer;
    display: inline-block;
}

.shake:hover {
    animation: shake 1s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
    transform: translate(0,0);
}

@keyframes Pulse {
    0% {
        transform:scale(1,1);
    }
    50% {
        transform:scale(2,2);
    }
    100% {
        transform:scale(0.2,0.2);
    }
}

.pulse {
    display: inline-block;
    animation: Pulse 3s linear infinite alternate both;
}

/* heart */

@keyframes heartColor {
    10% {
        background-color:rgb(27, 8, 201);
    }

}
.heart {
    position: relative;
    width: 10vw;
    height: 10vw;
    margin: 1rem auto;
    animation: Pulse 1s linear infinite;
}

.heart::after, .heart::before {
    content: '';
    position: absolute;
    left: 5vw;
    top:0;
    width: 5vw;
    height: 8vw;
    background-color: crimson;
    transform: rotate(-45deg);
    transform-origin: 0 100%;
    border-radius: 5vw 5vw 0 0;
    animation: heartColor 1s linear infinite;
}

.heart::after {
    left: 0;
    transform: rotate(45deg);
    transform-origin: 100% 100%;
}


@keyframes spinner {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
.spinner {
    background-color: aquamarine;
    width: 7vw;
    height: 7vw;
    margin-left: auto;
    margin-right: auto;
    border: 1vw solid rgba(0,0,0,10%);
    border-radius: 50%;
    border-left-color: blue;
    animation: spinner 1.5s  ease-in-out infinite;
}

.btn {
    position: relative;
    border: none;
    border-radius: 0.25rem;
    padding: .2rem;
    width: 15rem;
    height: 2.5rem;
    font-size: 1.25rem;
    font-weight: bold;
    cursor: pointer;
    overflow: hidden;
    box-shadow: .1rem .1rem .5rem .25rem #00000015;
}

.anim-bottom::after {
    content: "";
    position: absolute;
    bottom: 0;
    width: 0;
    height: 0.25rem;
    background-color: rgba(165, 7, 7, 0.144);
    transition: width 1s ease, left 0.5s ease, right 0.5s ease;
}

.anim-bottom:hover::after {
    width: 100%;

}
.to-left::after {
    left: 0;
}

.to-center::after {
    left: 50%;
}

.to-center:hover::after {
    left: 0;
}
.to-right::after {
    right: 0;
}

.anim-gradient {
    background-image: linear-gradient(to right, red, orange);
    background-size: 300% 100%;
    transition: background-position 1s ease;
}

.anim-gradient:hover {
    background-position: 100% 0;
}

.tabs-menu {
    position: relative;
    margin-left: auto;
    margin-right: auto;
    background-color: rgb(165, 164, 159);
    padding: 1rem;
    border-radius: 1rem;
    width: 70%;
    height: 3rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.tabs-menu input[type="radio"] {
    display: none;
}

.tabs-menu label {
    position: relative;
    text-align: center;
    cursor: pointer;
    width: calc(100% / 4 - 0.5rem);
    z-index: 1;
}

.tabs-menu label:hover {
    color: #fff;
}

.tabs-menu input[type="radio"]:checked + label {
    color: white;
}

.tab-bg-hover {
    position: absolute;
    width: calc(100% / 4 - 0.5rem);
    height: 2rem;
    background-image: linear-gradient(90deg, yellow, red);
    border-radius: 0.5rem;
    transition: transform 300ms ease-in-out;
}

#tab-1:checked ~ .tab-bg-hover {
    transform: translateX(0);
}

#tab-2:checked ~ .tab-bg-hover {
    transform: translateX(100%);
}

#tab-3:checked ~ .tab-bg-hover {
    transform: translateX(200%);
}

#tab-4:checked ~ .tab-bg-hover {
    transform: translateX(300%);
}

.off-canvas-btn {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 999;
    width: 3rem;
    height: 3rem;
    cursor: pointer;
    opacity: 0;
}

.off-canvas-burger {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    z-index: 899;
    width: 3rem;
    height: 0.6rem;
    background-color: rgb(27, 8, 201);
    border-radius: 0.3rem;
    transform: rotate(0deg) translate(0, -1.2rem);
    transition: transform 1s ease,  background-color 1s ease;
    transform-origin: top left;
}

.off-canvas-burger::before,
.off-canvas-burger::after  {
    content: '';
    display: block;
    width: 100%;
    height: 0.6rem;
    background-color:rgb(27, 8, 201);
    border-radius: 0.3rem;
    transition: transform 1s ease;
}

.off-canvas-burger::before {
    transform: rotate(0deg) translate(0, -0.9rem);
}

.off-canvas-burger::after {
    transform: rotate(0deg) translate(0, 0.3rem);
}

.off-canvas-btn:checked + .off-canvas-burger {
    background-color: transparent;
}

.off-canvas-btn:checked + .off-canvas-burger::before {
    transform: rotate(45deg);
}
.off-canvas-btn:checked + .off-canvas-burger::after {
    transform: rotate(-45deg) translate(5px, -0.6rem);
}

.off-canvas-menu {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: #0007;
    z-index: 799;
    display:flex;
    justify-content: center;
    align-items: center;
    transition: transform 0.5s ease-in-out;
    transform: translate(0, 100%); 

}
.off-canvas-btn:checked ~ .off-canvas-menu {
    transform: translate(0, 0);
}
.off-canvas-menu-container {
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

.off-canvas-link {
    padding: 2rem;
    border-bottom: thin solid red;
    font-size: 1.5rem;
    text-decoration: none;
    color: white;
    transition: background-color 1s ease;
}
.off-canvas-link:first-child{
    border-top: thin solid red;
}
.off-canvas-link:hover {
    background-color: #e007;
}

.modal {
    position: fixed;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    background-color: #0007;
    z-index: 799;
    display:flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.5s ease-in-out;
}
.modal:target {
    opacity: 1;
    pointer-events: auto;
}

.modal-container {
    position: relative;
    border: thick solid #e50;
    border-radius: 1rem;
    background-color: white;
    padding: 2rem;
    width: 70%;
    height: 70vh;
}

.modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 2rem;
    height: 2rem;
    text-decoration: none;
    font-weight: bold;
    color: white;
    background-color: red;
    text-align: center;
    line-height: 2rem;
    border-radius: 0.5rem;
    transition: background-color 0.5s ease-in-out, transform 0.5s ease-in-out;
}

@keyframes introStarWars {
    0% {
        transform: perspective(100vh) rotateX(25deg) translateY(100%);
    }
    
    100% {
        transform: perspective(100vh) rotateX(25deg) translateY(-150%);
    }
}
body {
    margin: 0;
}
.star-wars {
    margin-left: auto;
    margin-right: auto;
    width: 100%;
    height: 100vh;
    overflow: hidden;
    color: #ffb13a;
    background-image: url("../assets/stars_feature.png");
}

.star-wars-container {
    margin-left: auto;
    margin-right: auto;
    width: 80%;
    text-align: justify;
    letter-spacing: 0.1rem;
    animation: introStarWars 20s infinite;
}

.star-wars h2,
.star-wars h3 {
    font-size: 5vw;
    text-align: center;
}

.star-wars p {
    font-size: 3vw;
}